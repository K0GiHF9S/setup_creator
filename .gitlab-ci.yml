default:
  image: python:3.9
  interruptible: true

stages:
  - fetch
  - tests
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

.sonarqube:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: ${CI_PROJECT_DIR}/.sonar
    GIT_DEPTH: 0
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .sonar/cache
  allow_failure: true

.merge:
  before_script:
    - git config --global user.email "${GIT_USER_EMAIL}"
    - git config --global user.name "${GIT_USER_NAME}"
    - git fetch origin "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - git checkout "origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - git merge --squash -v -
    - git diff --stat --staged
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME

cache: &global_cache
  key:
    files:
      - poetry.lock
  paths:
    - .venv
    - .cache/pip
  policy: pull

fetch:
  stage: fetch
  cache:
    <<: *global_cache
    policy: pull-push
  script:
    - python -V
    - pip install poetry
    - poetry install
  rules:
    - when: always

test:
  stage: tests
  script:
    - pip install poetry
    - poetry run pytest --cov --html=htmlcov/results.html --self-contained-html --junitxml=report.xml --cov-report=xml --cov-report=html --cov-report=term
  artifacts:
    when: always
    reports:
      junit: report.xml
      cobertura: coverage.xml
    paths:
      - htmlcov/
      - report.xml
      - coverage.xml

merged_test:
  stage: tests
  extends: .merge
  script:
    - pip install poetry
    - poetry install
    - poetry run pytest --cov --html=htmlcov/results.html --self-contained-html --junitxml=report.xml --cov-report=xml --cov-report=html --cov-report=term
  artifacts:
    when: always
    reports:
      junit: report.xml
      cobertura: coverage.xml
    paths:
      - report.xml
      - coverage.xml

sonarqube:
  stage: deploy
  needs: ["test"]
  extends: .sonarqube
  script:
    - sed -i "s@<source>$(pwd)@<source>.@g" coverage.xml
    - sonar-scanner -Dsonar.branch.name="${CI_COMMIT_REF_NAME}"
  when: always

merged_sonarqube:
  stage: deploy
  needs: ["merged_test"]
  extends: .sonarqube
  script:
    - sed -i "s@<source>$(pwd)@<source>.@g" coverage.xml
    - >-
      sonar-scanner
      -Dsonar.pullrequest.key="${CI_MERGE_REQUEST_IID}"
      -Dsonar.pullrequest.branch="${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}"
      -Dsonar.pullrequest.base="${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}"
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      when: always

pages:
  stage: deploy
  needs: ["test"]
  script:
    - mv htmlcov/ public/
  artifacts:
    paths:
      - public/
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always

deploy:
  stage: deploy
  script:
    - pip install poetry
    - poetry publish -r gitlab -u gitlab-ci-token -p ${CI_JOB_TOKEN} --build
  rules:
    - if: $CI_COMMIT_TAG
