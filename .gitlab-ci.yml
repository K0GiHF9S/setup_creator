image: python:3.9

stages:
  - fetch
  - tests
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache: &global_cache
  key:
    files:
      - poetry.lock
  paths:
    - .venv
    - .cache/pip
  policy: pull

fetch:
  stage: fetch
  cache:
    <<: *global_cache
    policy: pull-push
  script:
    - python -V
    - pip install poetry
    - poetry install
  rules:
    - when: always

test:
  stage: tests
  script:
    - poetry run pytest --cov --html=htmlcov/results.html --self-contained-html --junitxml=report.xml --cov-report=xml --cov-report=html
  artifacts:
    when: always
    reports:
      junit: report.xml
      cobertura: coverage.xml
    paths:
      - htmlcov/

merged_test:
  stage: tests
  script:
    - git checkout "origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - git merge --squash -v -
    - git diff --stat --staged
    - poetry install
    - poetry run pytest --cov --html=htmlcov/results.html --self-contained-html --junitxml=report.xml --cov-report=xml --cov-report=html
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME

pages:
  stage: deploy
  needs: ["test"]
  script:
    - mv htmlcov/ public/
  artifacts:
    paths:
      - public/
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always

deploy:
  stage: deploy
  script:
    - poetry publish -r gitlab -u gitlab-ci-token -p ${CI_JOB_TOKEN} --build
  rules:
    - if: $CI_COMMIT_TAG
